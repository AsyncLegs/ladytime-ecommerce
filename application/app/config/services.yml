# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
    hwi_oauth.authentication.provider.oauth.class: AppBundle\Security\Provider\OAuthProvider
    ladytime_oauth.authentication.provider.user.class: AppBundle\Security\Provider\OAuthUserProvider


services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    ladytime.admin.users:
        class: AppBundle\Admin\UserAdmin
        arguments: [~, AppBundle\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Users }
        public: true

    ladytime.admin.roles:
        class: AppBundle\Admin\RoleAdmin
        arguments: [~, AppBundle\Entity\Role, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Groups }
        public: true

    ladytime.admin.currencies:
        class: AppBundle\Admin\CurrencyAdmin
        arguments: [~, AppBundle\Entity\Currency, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Store, label: Currencies }
        public: true

    ladytime.admin.product:
        class: AppBundle\Admin\ProductAdmin
        arguments: [~, AppBundle\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Store, label: Products }
        public: true

    ladytime.admin.price.type:
        class: AppBundle\Admin\PriceTypeAdmin
        arguments: [~, AppBundle\Entity\PriceType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Store, label: Price Types }
        public: true
    ladytime.admin.product.price.types:
        class: AppBundle\Admin\ProductPriceTypeAdmin
        arguments: [~, AppBundle\Entity\ProductPriceType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm }
        public: true

    ladytime.admin.category:
        class: AppBundle\Admin\CategoryAdmin
        arguments:
        - ~
        - AppBundle\Entity\Category
        - 'RedCodeTreeBundle:TreeAdmin'
        - 'name'
        tags:
            - {name: sonata.admin, manager_type: orm, group: Store, label: Categories}
        public: true

    ladytime.admin.banners:
        class: AppBundle\Admin\BannerAdmin
        arguments: [~, AppBundle\Entity\Banner, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, group: Store, label: Banners}
        calls:
            - [ setTranslationDomain, [SonataAdminBundle]]
            - [ setUploadableManager, ["@stof_doctrine_extensions.uploadable.manager"]]
        public: true



    ladytime.authentification.handler:
        class: AppBundle\Security\Handlers\AuthenticationHandler
        arguments: ['@Symfony\Component\Translation\TranslatorInterface','@Symfony\Component\Routing\Matcher\UrlMatcherInterface']

    ladytime.notification.email.service:
        class: AppBundle\Service\Notification\EmailNotificationService
        arguments: ['@mailer', '@templating.engine.twig']

    ladytime.oauth.user_provider.service:
        class: "%ladytime_oauth.authentication.provider.user.class%"
        arguments: ['@Symfony\Component\Routing\Matcher\UrlMatcherInterface','@Doctrine\ORM\EntityManagerInterface', '@security.encoder_factory.generic', '@session']

    ladytime.doctrine.hash_password_listener:
        class: AppBundle\Doctrine\HashPasswordListener
        autowire: true
        tags:
            - { name: doctrine.event_subscriber }

    ladytime.doctrine.default_roles_listener:
        class: AppBundle\Doctrine\DefaultRolesSettingListener
        autowire: true
        tags:
            - {name: doctrine.event_subscriber}

    AppBundle\Service\Synchronization\Interfaces\ReceiverInterface:
        class: AppBundle\Service\Synchronization\Currency\Private24CurrenciesCachedReceiver
        arguments: ['@http.client','@cachier','%currencies%']
        autowire: true
        public: true

    ladytime.currency.synchonizer:
        class: AppBundle\Service\Synchronization\Currency\CurrencySynchronizer
        arguments: ['@doctrine.orm.entity_manager', 'AppBundle\Service\Synchronization\Interfaces\ReceiverInterface']

    cachier:
        class: Symfony\Component\Cache\Adapter\FilesystemAdapter
    http.client:
        class: \GuzzleHttp\Client
